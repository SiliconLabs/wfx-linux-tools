#!/bin/bash
# Copyright (c) 2018, Silicon Laboratories
# See license terms contained in COPYING file

set -euo pipefail
. wfx_set_env
run_as_root

USAGE="Usage: $(basename $0) OPTION

Start in access point mode

Options:
      --help                display this message
      --conf <file>         hostapd.conf file
      --ip <address>        set the IP (with /24 mask)
  -d, --dhcp yes|no|ignore  enable DHCP server (default is no) (-d equals --dhcp yes)
      --forward <if>        enable traffic forwarding to interface
      --no-forward          disable all traffic forwarding

Example:
  - start an ap with address 192.168.1.1 on wlan and enable DHCP server (Wi-Fi configuration depends on hostapd.conf content):
      $(basename $0) --conf /home/pi/access_point/hostapd.conf --ip 192.168.1.1 --dhcp yes

Note:
An example hostapd.conf file is provided in /home/pi/siliconlabs/wfx-linux-tools/examples/,
it can be copied outside of Silicon Labs repositories (e.g. /home/pi/access_point)
and edited.
"

CONF=""
SET_IP=""
DHCP="no"
FWD_IF=""
NO_FWD="false"
INTERFACE="wlan0"

[ $# -eq 0 ] && error
LONGOPTS="help,conf:,ip:,dhcp:,forward:,no-forward"
SHORTOPTS="d"
! PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@")
[[ ${PIPESTATUS[0]} -ne 0 ]] && error
eval set -- "$PARSED"
while true; do
    case "$1" in
        --conf)       CONF="$2";      shift ;;
        --ip)         SET_IP="$2";    shift ;;
        --dhcp)       DHCP="$2";      shift ;;
        -d)           DHCP='yes' ;;
        --forward)    FWD_IF="$2";    shift ;;
        --no-forward) NO_FWD="true"         ;;
        --help)       echo "$USAGE"; exit 0 ;;
        --)           shift; break ;;
        *)            error ;;
    esac
    shift
done
[ $# -ne 0 ] && error

kill_wait()
{
    local PID=$(cat $1 2>/dev/null)
    if [ -n "$PID" ]; then
        if kill $PID 2>/dev/null; then
            tail --pid=$PID -f /dev/null
        fi
    fi
}

# Try to get interface from hostapd.conf
if [ ! -z "$CONF" ]; then
    INTERFACE=$(sed -ne 's/^interface=\(.*\)/\1/p' "$CONF")
fi

check_interface "$INTERFACE"
HOSTAPD_PIDFILE=/var/run/hostapd-$INTERFACE.pid
DNSMASQ_PIDFILE=/var/run/dnsmasq-$INTERFACE.pid

if [ ! -z "$SET_IP" ] || [ "$DHCP" = yes ]; then
    # Disable DHCP client on the interface
    dhcpcd --release "$INTERFACE" 2>/dev/null
    # dhcpcd release is not instantaneous
    sleep 1
fi

if [ ! -z "$SET_IP" ]; then
    echo "Configuring IP"
    ip addr flush dev "$INTERFACE"
    ip addr add "$SET_IP/24" dev "$INTERFACE"
fi

case "$DHCP" in
    yes)
        kill_wait $DNSMASQ_PIDFILE
        echo "Starting DHCP server dnsmasq"
        IP=$(ip address show "$INTERFACE" | sed -ne 's/.*inet \([^\/]*\).*/\1/p')
        if [ $(echo -n "$IP" | grep -c '') != "1" ]; then
            echo "ERROR: $INTERFACE has not exactly one IP address (try --ip)" >&2
            exit 1
        fi
        RANGE="${IP%.*}.100,${IP%.*}.200"
        dnsmasq --conf-file=/dev/null --interface="$INTERFACE" --bind-interfaces --except-interface=lo --dhcp-range="$RANGE" --pid-file="$DNSMASQ_PIDFILE"
        ;;
    no)
        kill_wait $DNSMASQ_PIDFILE
        ;;
    ignore)
        ;;
    *)
        error "invalid value for --dhcp: $DHCP"
        ;;
esac

if [ ! -z "$FWD_IF" ]; then
    echo "Enabling traffic forwarding"
    echo 1 > /proc/sys/net/ipv4/ip_forward
    RULE="POSTROUTING -o $FWD_IF -j MASQUERADE"
    iptables -t nat -C $RULE 2>/dev/null || iptables -t nat -A $RULE
fi

if [ "$NO_FWD" = "true" ]; then
    echo "Disabling traffic forwarding"
    echo 0 > /proc/sys/net/ipv4/ip_forward
    iptables -t nat -F POSTROUTING
fi

if [ ! -z "$CONF" ]; then
    echo "Starting hostapd"
    kill_wait "$HOSTAPD_PIDFILE"
    kill_wait /var/run/wpa_supplicant-$INTERFACE.pid
    hostapd -B "$CONF" -P "$HOSTAPD_PIDFILE"
fi

echo "Success"
