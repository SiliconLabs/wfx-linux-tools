#!/bin/bash
# Copyright (c) 2018, Silicon Laboratories
# See license terms contained in COPYING file

set -euo pipefail
. wfx_set_env
check_not_root

USAGE="Usage: $(basename $0) OPTION

Install PDS

Run wfx_firmware_install before running this command to make sure
PDS definitions are aligned with firmware version.

Options:
  --help          display this message
  --list-boards   list supported boards
  --auto          auto-detect board
  --board MODEL   select board MODEL
  --list-tags     list PDS versions
  --version VER   install version VER (default is to autodetect)
  --custom FILE   install custom .pds.in FILE
  --repo REPO     use specific repository for both PDS files and definitions
  --repo-url URL  use this address as remote for the specific repository

Examples:
  - install PDS with board auto-detection and version auto-detection
      $(basename $0) wfx_pds_install --auto

  - install custom PDS
      $(basename $0) wfx_pds_install --custom ~/my_test_PDS.pds.in

Note:
Two conditions must be met for --auto to work:
  - Board's EEPROM must be written with the right model reference
  - Board must be attached to the Raspberry Pi before boot (no hotplug)
"

BOARD=""
INFILE=""
VERSION=""
LIST="false"
LIST_TAGS="false"
PDS_DEF_PATH="$GITHUB_PDS_PATH"
PDS_PATH="$GITHUB_PDS_PATH_NEW"
PDS_URL="dummy"

[ $# -eq 0 ] && error
LONGOPTS="help,list-boards,auto,board:,list-tags,version:,custom:,repo:,repo-url:"
! PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@")
[[ ${PIPESTATUS[0]} -ne 0 ]] && error
eval set -- "$PARSED"
while true; do
    case "$1" in
        --list-boards) LIST="true" ;;
        --auto)        BOARD="$(wfx_info --board)" ;;
        --board)       BOARD="${2%.pds.in}"; shift ;;
        --custom)      INFILE="$2"; shift ;;
        --list-tags)   LIST_TAGS="true" ;;
        --version)     VERSION="$2"; shift ;;
        --repo)        PDS_DEF_PATH="$2/definitions"; PDS_PATH="$2"; shift ;;
        --repo-url)    PDS_URL="$2"; shift ;;
        --help)        echo "$USAGE"; exit 0 ;;
        --)            shift; break ;;
        *)             error ;;
    esac
    shift
done
[ $# -ne 0 ] && error

WFX_GIT="$GITHUB_TOOLS_PATH/update/git.sh --url $PDS_URL --path $PDS_PATH"

if [ "$LIST_TAGS" = "true" ]; then
    $WFX_GIT --list
    exit 0
fi

[ "$LIST" = "false" ] && [ -z "$BOARD" ] && [ -z "$INFILE" ] && error "please use --auto, --board or --custom"
[ -n "$VERSION" ] && [ -n "$INFILE" ] && error "cannot use --version and --custom"

if [ -z "$INFILE" ]; then
    if [ -z "$VERSION" ]; then
        echo "INFO: no --version specified, autodecting..."
        VERSION=origin/API$(sed -nre 's/#define DEFINITIONS_(.)_(.)_IN/\1.\2/p' $PDS_DEF_PATH/definitions.in)
    fi
    $WFX_GIT --version "$VERSION"
    INFILE="$PDS_PATH/$BOARD.pds.in"
fi

if [ "$LIST" = "true" ]; then
    echo "Version $VERSION supports the following boards"
    tree $PDS_PATH -P '*.pds.in' -I definitions --noreport
    exit 0
fi

[ ! -e "$INFILE" ] && error "cannot find PDS $INFILE, board $BOARD may not be supported by version $VERSION"

INFILE_BASE=$(basename $INFILE)
OUTFILE_BASE=${INFILE_BASE%.pds.in}.pds
OUTFILE=/lib/firmware/$OUTFILE_BASE

set -x
sudo pds_compress $INFILE $OUTFILE --include "$PDS_DEF_PATH"
sudo ln -sfn $OUTFILE_BASE /lib/firmware/wf200.pds
set +x

if [ -n "$BOARD" ]; then
    echo "PDS installed for board $BOARD version $VERSION"
else
    echo "custom PDS $INFILE installed"
fi
